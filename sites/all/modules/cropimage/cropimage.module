<?php
/**
 *
 * @file
 * 
 *
 */

function cropimage_field_info_alter(&$info) {
//  dprint_r($info['image']);  exit;
}

function cropimage_form_alter(&$form, &$form_state, $form_id) {
// dprint_r($form);  exit;
  if (isset($form['#field']['type']) && ( $form['#field']['type']== 'image')) {
 
  $form['crop_required_' . $form['#field']['field_name']] = array(
      '#title' => t('click here to crop the image from center'),
      '#description' => t('On select of this the uploaded images are croped Xpx and Ypx from center'),
      //'#default' => variable_get('crop_required_' . $form['#field']['field_name']),
      '#default_value' => variable_get('crop_required_' . $form['#field']['field_name'], 0),
      '#type' => 'checkbox',
    );

  $field = 'input[name="crop_required_cropimage_' . $form['#field']['field_name'] . '"]';

  $form['X_cropimage_' . $form['#field']['field_name']] = array(
      '#title' => t('Please enter X value'),
      '#type' => 'textfield',
      '#default_value' => variable_get('X_cropimage_' . $form['#field']['field_name']),
      '#maxlength' => 5,
      '#attributes' => array(
        'pattern' => '[0-9]+',
        'placeholder' => 'Numbers only',
      ),
      '#size' => 10,
      '#states' => array(
        '#required'  => array(
          $field => array(
	        'checked' => TRUE,
          ),
      ),
      'visible' => array(
        $field => array(
	      'checked' => TRUE,
          ),           
 	   ),
     ),
   );
  $form['Y_cropimage_' . $form['#field']['field_name']] = array(
      '#title' => t('Please enter Y value'),
      '#type' => 'textfield',
      '#default_value' => variable_get('Y_cropimage_' . $form['#field']['field_name']),
      '#maxlength' => 5,
      '#attributes' => array(
        'pattern' => '[0-9]+',
        'placeholder' => 'Numbers only',
      ),
      '#size' => 10,
      '#states' => array(
        '#required'  => array(
          $field => array(
	        'checked' => TRUE,
          ),
      ), 
      'visible' => array(
        $field => array(
	      'checked' => TRUE,
        ),
 	  ),
    ),
  );
  $form['#validate'][] = 'cropimage_validate_function';
  $form['#submit'][] = 'cropimage_form_submit';
  }
  $form['#submit'][] = 'cropimage_remove_fields';
}

function cropimage_validate_function($form, &$form_state) {
  if (isset($form_state['values']['X_cropimage_' . $form['#field']['field_name']] ) && !is_numeric($form_state['values']['X_cropimage_' . $form['#field']['field_name']]) ) {
    form_set_error($form['X_cropimage' . $form['#field']['field_name']], 'Please enter numeric ');
  }
  if (isset($form_state['values']['Y_cropimage_' . $form['#field']['field_name']] ) && !is_numeric($form_state['values']['Y_cropimage_' . $form['#field']['field_name']]) ) {
    form_set_error($form['Y_cropimage' . $form['#field']['field_name']], 'Please enter numeric ');
  }
}

function cropimage_form_submit($form, &$form_state) {
  if (isset($form_state['values']['crop_required_cropimage_' . $form['#field']['field_name']]) && $form_state['values']['crop_required_cropimage_' . $form['#field']['field_name']] == '1' ) {
    variable_set( 'crop_required_cropimage_' . $form['#field']['field_name'], $form_state['values']['crop_required_' . $form['#field']['field_name']]);
    variable_set( 'X_cropimage_' . $form['#field']['field_name'], $form_state['values']['X_cropimage_' . $form['#field']['field_name']]);
    variable_set( 'Y_cropimage_' . $form['#field']['field_name'], $form_state['values']['Y_cropimage_' . $form['#field']['field_name']]); 
  }     
}


function cropimage_remove_fields($form, &$form_state) {
  // dprint_r($form);  exit;	
  if (isset($form['#field']['type']) && ( $form['#field']['type']== 'image')) {
  if (isset($form_state['values']['crop_required_cropimage_' . $form['#field']['field_name']]) && $form_state['values']['crop_required_cropimage_' . $form['#field']['field_name']] == '0' ) {
    variable_set( 'crop_required_cropimage_' . $form['#field']['field_name'], 0);
    variable_set( 'X_cropimage_' . $form['#field']['field_name'], 0);
    variable_set( 'Y_cropimage_' . $form['#field']['field_name'], 0); 
  } 
}    
}
function cropimage_node_view($node, $view_mode, $langcode) {
//	dprint_r($node);  exit; 
  $result = db_query('SELECT v.name FROM {variable} v WHERE v.name like :name and v.value like :value' , array(
  ':name' => "crop_required_cropimage_%" ,  
  ':value' => "%1%" 
  ))->fetchAssoc();
  if (in_array( 'crop_required_cropimage_field_uploadimage_for_croping', $result)) {
   $width = variable_get( 'X_cropimage_field_uploadimage_for_croping');
   $height = variable_get( 'Y_cropimage_field_uploadimage_for_croping');
   $X =  $node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['width'];
   $Y = $node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['height'];
   $filepath = drupal_realpath($node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['uri']);
   $image_object = image_load($filepath, $toolkit = FALSE);
   /**
   $image_object_copy = clone $image_object;
   $orig_uri = file_unmanaged_copy($node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['uri'], 
   $node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['uri']);
   $image_object_copy->fid = 0;
   $image_object_copy->uri = $orig_uri;
   $image_object_copy->filename = basename($orig_uri);
   $image_object_copy->status = 1;
   $image_object_copy = file_save($image_object_copy); 
   file_usage_add($image_object_copy, 'field_uploadimage_for_croping', 'file', $node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['fid']);
   */ 
   image_crop($image_object, $x = ($width/2), $y = ($height/2), $width, $height); 
   image_save($image_object, $node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['uri']); 
 //  dprint_r($image_object);  exit;
 //  image_save($image_object_copy, 'public://xxxx'); 
   image_path_flush($node->content['field_uploadimage_for_croping']['#object']->field_uploadimage_for_croping['und']['0']['uri']);
  }
}
